{
  "__inputs": [
    {
      "name": "DS_TIMESCALE",
      "label": "timescale",
      "description": "",
      "type": "datasource",
      "pluginId": "postgres",
      "pluginName": "PostgreSQL"
    }
  ],
  "__elements": {},
  "__requires": [
    {
      "type": "panel",
      "id": "bargauge",
      "name": "Bar gauge",
      "version": ""
    },
    {
      "type": "panel",
      "id": "gauge",
      "name": "Gauge",
      "version": ""
    },
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "9.2.1"
    },
    {
      "type": "datasource",
      "id": "postgres",
      "name": "PostgreSQL",
      "version": "1.0.0"
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": null,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "datasource": {
        "type": "postgres",
        "uid": "${DS_TIMESCALE}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-RdYlGr"
          },
          "links": [],
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 13,
        "x": 0,
        "y": 0
      },
      "id": 3,
      "options": {
        "displayMode": "gradient",
        "minVizHeight": 0,
        "minVizWidth": 0,
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [],
          "fields": "",
          "values": true
        },
        "showUnfilled": true,
        "text": {},
        "valueMode": "color"
      },
      "pluginVersion": "9.2.1",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_TIMESCALE}"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "\n--SELECT TO_TIMESTAMP($__unixEpochFrom()), $__timeFrom()\n--select tstzrange( to_timestamp($__unixEpochFrom()) AT time zone 'Asia/Kolkata',to_timestamp($__unixEpochTo()) AT time zone 'Asia/Kolkata' ), $__timeFrom()\nSELECT sum(target_qty) target_qty, sum(actual_qty) actual_qty_produced\nFROM  job_details\nWHERE tstzrange( to_timestamp($__unixEpochFrom()) AT time zone 'Asia/Kolkata',to_timestamp($__unixEpochTo()) AT time zone 'Asia/Kolkata' ) @> shift\n  and job_name in ('${job}')\n--group by machine",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "job_details"
        }
      ],
      "title": "Prod Quantity of ${job}",
      "transparent": true,
      "type": "bargauge"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "${DS_TIMESCALE}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-RdYlGr"
          },
          "decimals": 0,
          "displayName": "[Efficiency] Target vs Actual",
          "mappings": [],
          "thresholds": {
            "mode": "percentage",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "super-light-green",
                "value": 100
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 11,
        "x": 13,
        "y": 0
      },
      "id": 1,
      "options": {
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [],
          "fields": "",
          "values": true
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true
      },
      "pluginVersion": "9.2.1",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_TIMESCALE}"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "\nSELECT sum(actual_qty)/sum(target_qty)::float * 100 as efficiency\nFROM  job_details\nWHERE tstzrange( to_timestamp($__unixEpochFrom()) AT time zone 'Asia/Kolkata',to_timestamp($__unixEpochTo()) AT time zone 'Asia/Kolkata' ) @> shift\n  and job_name in ('${job}')\n--group by job\n",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "job_details"
        }
      ],
      "title": "Efficiency of ${job}",
      "type": "gauge"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "${DS_TIMESCALE}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-RdYlGr"
          },
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 13,
        "x": 0,
        "y": 7
      },
      "id": 5,
      "options": {
        "displayMode": "gradient",
        "minVizHeight": 0,
        "minVizWidth": 0,
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": true
        },
        "showUnfilled": true,
        "text": {},
        "valueMode": "color"
      },
      "pluginVersion": "9.2.1",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_TIMESCALE}"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "select actual_qty actual_qty_produced, total_strokes strokes_taken\nFROM (\nselect job_name, count(eventtime) total_strokes\nfrom job_details jd left join sensor s on jd.machine = s.machine and eventtime <@ shift\nwhere tstzrange( to_timestamp($__unixEpochFrom()) AT time zone 'Asia/Kolkata',to_timestamp($__unixEpochTo()) AT time zone 'Asia/Kolkata' ) @> shift \ngroup by job_name\n)s join (\n  select job_name, sum(actual_qty) actual_qty \n  from job_details \n  WHERE tstzrange( to_timestamp($__unixEpochFrom()) AT time zone 'Asia/Kolkata',to_timestamp($__unixEpochTo()) AT time zone 'Asia/Kolkata' ) @> shift \n  GROUP BY job_name\n) jd on s.job_name = jd.job_name\nwhere jd.job_name = '${job}'\n",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Actual Strokes vs Actual Quantity of ${job}",
      "type": "bargauge"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "${DS_TIMESCALE}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "mappings": [],
          "thresholds": {
            "mode": "percentage",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "#EAB839",
                "value": 25
              },
              {
                "color": "orange",
                "value": 50
              },
              {
                "color": "red",
                "value": 75
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 11,
        "x": 13,
        "y": 7
      },
      "id": 6,
      "options": {
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [],
          "fields": "",
          "values": true
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true
      },
      "pluginVersion": "9.2.1",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_TIMESCALE}"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "select (total_strokes-actual_qty)/actual_qty::float * 100 efficiency\nFROM (\nselect job_name, count(eventtime) total_strokes\nfrom job_details jd left join sensor s on jd.machine = s.machine and eventtime <@ shift\nwhere tstzrange( to_timestamp($__unixEpochFrom()) AT time zone 'Asia/Kolkata',to_timestamp($__unixEpochTo()) AT time zone 'Asia/Kolkata' ) @> shift \ngroup by job_name\n)s join (\n  select job_name, sum(actual_qty) actual_qty \n  from job_details \n  WHERE tstzrange( to_timestamp($__unixEpochFrom()) AT time zone 'Asia/Kolkata',to_timestamp($__unixEpochTo()) AT time zone 'Asia/Kolkata' ) @> shift \n  GROUP BY job_name\n) jd on s.job_name = jd.job_name\nwhere jd.job_name = '${job}'",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Idle strokes % of ${job}",
      "transparent": true,
      "type": "gauge"
    }
  ],
  "refresh": "",
  "schemaVersion": 37,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {},
        "datasource": {
          "type": "postgres",
          "uid": "${DS_TIMESCALE}"
        },
        "definition": "select distinct(trim(job_name)) from job_details order by trim(job_name)",
        "hide": 0,
        "includeAll": false,
        "label": "job",
        "multi": false,
        "name": "job",
        "options": [],
        "query": "select distinct(trim(job_name)) from job_details order by trim(job_name)",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-7d",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "Asia/Kolkata",
  "title": "Job wise - Completed Production",
  "uid": "e97d1de0-2cd9-4458-a69d-6e152ffdfab0",
  "version": 1,
  "weekStart": ""
}